{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/common/form/form.component.ts","webpack:///src/app/components/common/form/form.component.html","webpack:///src/app/components/header/header.component.ts","webpack:///src/app/components/header/header.component.html","webpack:///src/app/pages/auth/auth.page.ts","webpack:///src/app/pages/auth/auth.page.html","webpack:///src/app/pages/profile/profile.page.ts","webpack:///src/app/pages/profile/profile.page.html","webpack:///src/app/services/auth.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","route","component","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","FormComponent","formBuilder","buildForm","formGroupObject","options","inputs","map","name","initialValue","validators","formGroup","group","console","log","controlName","error","control","get","touched","errors","HeaderComponent","AuthPage","router","authService","isSignUp","onSubmit","values","signUp","signIn","onSuccess","getIsMemberText","toggleForm","formOptions","buttonSubmitText","getFormButtonText","navigateByUrl","type","placeholder","required","email","icon","ProfilePage","isDropdownOpen","toggleDropdown","AuthService","http","baseUrl","data","providedIn","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthPage } from '@pages/auth/auth.page'\nimport { ProfilePage } from '@pages/profile/profile.page'\n\n\nconst routes: Routes = [\n  { path: AuthPage.route, component: AuthPage },\n  { path: ProfilePage.route, component: ProfilePage },\n  { path: '**', redirectTo: AuthPage.route, pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'client';\n}\n","<router-outlet></router-outlet>","import { NgModule } from '@angular/core'\nimport { HttpClientModule } from '@angular/common/http'\nimport { BrowserModule } from '@angular/platform-browser'\nimport { ReactiveFormsModule } from '@angular/forms'\n\nimport { AppRoutingModule } from './app-routing.module'\n\nimport { AuthPage } from '@pages/auth/auth.page'\nimport { ProfilePage } from '@pages/profile/profile.page'\n\nimport { AppComponent } from './app.component'\nimport { HeaderComponent } from './components/header/header.component'\nimport { FormComponent } from './components/common/form/form.component'\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AuthPage,\n    ProfilePage,\n    HeaderComponent,\n    FormComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, Input, OnInit } from '@angular/core'\nimport { FormBuilder, FormGroup } from '@angular/forms'\nimport { IFormOptions, IFormInputOptions } from '@interfaces/form.interface'\n\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.scss']\n})\nexport class FormComponent implements OnInit {\n\n  @Input() options: IFormOptions\n\n  formGroup: FormGroup\n\n  constructor(\n    private formBuilder: FormBuilder\n  ) { }\n\n  ngOnInit(): void {\n    this.buildForm()\n  }\n\n  getError(controlName: string): string {\n    let error = ''\n    const control = this.formGroup.get(controlName)\n    if (control.touched && control.errors != null) {\n      error = 'El campo es requerido'\n    }\n    return error\n  }\n\n  private buildForm = () => {\n\n    const formGroupObject = {}\n\n    this.options.inputs.map(({ name, initialValue, validators }: IFormInputOptions) => {\n      formGroupObject[name] = [initialValue, validators]\n    })\n\n    this.formGroup = this.formBuilder.group(formGroupObject)\n\n    console.log(this.formGroup)\n\n  }\n\n}\n","<form class=\"form\" [formGroup]=\"formGroup\">\n\n  <div *ngFor=\"let input of options.inputs\" class=\"form__input\" [ngClass]=\"{'error': getError(input.name)}\">\n    <i [class]=\"input.icon\"></i>\n    <input \n      [type]=\"input.type || 'text'\" \n      [placeholder]=\"input.placeholder\"\n      [formControlName]=\"input.name\">\n  </div>\n\n  <button \n    class=\"form__button\"\n    [disabled]=\"formGroup.invalid\"\n    (click)=\"options.onSubmit(formGroup.value)\">\n    {{ options.buttonSubmitText }}\n  </button>\n\n</form>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>header works!</p>\n","import { Component, OnInit } from '@angular/core'\nimport { Router } from '@angular/router'\nimport { ProfilePage } from '@pages/profile/profile.page'\nimport { AuthService } from '@services/auth.service'\n\nimport { Validators } from '@angular/forms'\nimport { IFormOptions } from '@interfaces/form.interface'\n\n@Component({\n  templateUrl: './auth.page.html',\n  styleUrls: ['./auth.page.scss']\n})\nexport class AuthPage implements OnInit {\n\n  static route = 'auth'\n\n  formOptions: IFormOptions\n\n  isSignUp = false\n\n  constructor(\n    private router: Router,\n    private authService: AuthService\n  ) { }\n\n  ngOnInit(): void {\n    this.buildForm()\n  }\n\n  onSubmit = (values: any) => {\n    if (this.isSignUp) {\n      this.authService.signUp(values)\n    } else {\n      this.authService.signIn(values)\n    }\n    this.onSuccess()\n  }\n\n  on\n\n  getIsMemberText = () => this.isSignUp ? 'login' : 'register'\n  \n  toggleForm = () => {\n    this.isSignUp = !this.isSignUp\n    this.formOptions.buttonSubmitText = this.getFormButtonText()\n  }\n\n  private getFormButtonText = () => this.isSignUp ? 'start coding now' : 'login'\n\n  private onSuccess = () => this.router.navigateByUrl(ProfilePage.route)\n\n  private buildForm = () => {\n    this.formOptions = {\n      buttonSubmitText: this.getFormButtonText(),\n      inputs: [\n        { \n          name: 'email',\n          type: 'email',\n          placeholder: '*Your email', \n          initialValue: 'test@email.com',\n          validators: [ Validators.required, Validators.email ],\n          icon: 'far fa-envelope'\n        },\n        { \n          name: 'password',\n          type: 'password',\n          placeholder: '*Password', \n          validators: [ Validators.required ],\n          icon: 'fas fa-lock'\n        }\n      ],\n      onSubmit: this.onSubmit\n    }\n  }\n\n}\n","<div class=\"auth\">\n\n  <img class=\"auth__logo\" src=\"assets/images/devchallenges.svg\" alt=\"logo\">\n\n  <h2 *ngIf=\"!isSignUp else signup\" class=\"auth__title\">Login</h2>\n\n  <ng-template #signup>\n    <h2 class=\"auth__title\">\n      Join thousands of leaners from around the world\n    </h2>\n    \n    <p class=\"auth__subtitle\">\n      Master web development by making real-life projects. There are multiple paths for you to choose\n    </p>\n  </ng-template>\n\n  <app-form [options]=\"formOptions\"></app-form>\n\n  <p class=\"auth__social-text\">or continue with these social profile</p>\n\n  <div class=\"auth__buttons-socials\">\n    <i class=\"fab fa-google\"></i>\n    <i class=\"fab fa-facebook\"></i>\n    <i class=\"fab fa-twitter\"></i>\n    <i class=\"fab fa-github\"></i>\n  </div>\n  \n  <p class=\"auth__is-member\">\n    Already a member? \n    <a (click)=\"toggleForm()\">{{ getIsMemberText() }}</a> \n  </p>\n  \n</div>\n","import { Component, OnInit } from '@angular/core'\n\n@Component({\n  templateUrl: './profile.page.html',\n  styleUrls: ['./profile.page.scss']\n})\nexport class ProfilePage implements OnInit {\n\n  static route = 'profile'\n\n  isDropdownOpen = false\n\n  constructor() { }\n\n  ngOnInit(): void {}\n\n  toggleDropdown = () => this.isDropdownOpen = !this.isDropdownOpen\n\n}\n","<header class=\"header\">\n  \n  <img src=\"assets/images/devchallenges.svg\" alt=\"logo\">\n\n  <div class=\"header__profile\" (click)=\"toggleDropdown()\">\n    <div class=\"header__profile-avatar\">DM</div>\n    <div class=\"header__profile-name\">David Menor</div>\n    <div class=\"header__profile-menu\">\n      <i class=\"fas fa-caret-down\"></i>\n      <div class=\"header__profile-menu-content\" [ngClass]=\"{ 'header__profile-menu-content--open': isDropdownOpen }\">\n        <a>\n          <i class=\"fas fa-user\"></i>\n          <span>My Profile</span>\n        </a>\n        <a>\n          <i class=\"fas fa-user-friends\"></i>\n          <span>Group chat</span>\n        </a>\n        <div class=\"separated\"></div>\n        <a routerLink=\"profile\">\n          <i class=\"fas fa-sign-out-alt\"></i>\n          <span>Logout</span>\n        </a>\n      </div>\n    </div>\n  </div>\n\n</header>\n\n<div class=\"profile\">\n\n  <h2 class=\"profile__title\">Personal info</h2>\n  <p class=\"profile__subtitle\">\n    Basic info, like your name and photo\n  </p>\n\n  <div class=\"profile__container\">\n    <div>\n      <div>\n        <h3>Profile</h3>\n        <p>Some info may be visible to other people</p>\n      </div>\n      <button>Edit</button>\n    </div>\n    <form formGroup>\n      <div class=\"form__input\">\n        <label>Name</label>\n        <input disabled type=\"text\" value=\"David Menor\">\n      </div>\n      <div class=\"form__input\">\n        <label>Bio</label>\n        <input disabled type=\"text\" value=\"Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae;\">\n      </div>\n      <div class=\"form__input\">\n        <label>Phone</label>\n        <input disabled type=\"number\" value=\"123456789\">\n      </div>\n      <div class=\"form__input\">\n        <label>Email</label>\n        <input disabled type=\"email\" value=\"damenor@email.com\">\n      </div>\n    </form>\n  </div>\n  \n</div>\n","import { HttpClient } from '@angular/common/http'\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private baseUrl = 'http://localhost:3000/api/auth'\n\n  token: string\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  signIn = (data: any) => {\n    console.log('dataSignIn', data)\n    // const url = `${this.baseUrl}/signin`\n    // return this.http.post(url, data)\n  }\n  \n  signUp = (data: any) => {\n    console.log('dataSignUp', data)\n    // const url = `${this.baseUrl}/signup`\n    // return this.http.post(url, data)\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}